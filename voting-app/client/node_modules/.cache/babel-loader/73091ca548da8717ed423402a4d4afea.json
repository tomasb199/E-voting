{"ast":null,"code":"var _jsxFileName = \"/home/tomas/Voting app/voting-app/client/src/components/verifyVote/verifyVote.js\";\n\n/* eslint-disable react/no-direct-mutation-state */\nimport React, { Component } from 'react';\nimport FileReader from '../fileReader/fileReader';\nimport { NotificationManager } from 'react-notifications';\nimport axios from 'axios';\n\nclass VerifyVote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleForce = data => {\n      if (!isNaN(data[0][0]) && !isNaN(data[1][0])) {\n        this.state.id = data[0][0];\n        this.state.random = data[1][0];\n        console.log(data[0][0]);\n        console.log(data[1][0]);\n        axios.get('/voting-app/getVote', {\n          params: {\n            ID: this.state.id\n          }\n        }).then(response => {\n          console.log(response);\n          /*this.setState({isFinish: true});\n          this.state.isFinish = true;\n          NotificationManager.success('Your vote is counted :-)', 'SUCCESS!');*/\n        }).catch(function (error) {\n          console.log(error);\n        }).then(function () {// always executed\n        });\n      } else {\n        NotificationManager.error('Your is is not correct :-(', 'ERROR!');\n        return;\n      }\n    };\n\n    this.state = {\n      pubKey: [],\n      candidates: [],\n      bits: null,\n      id: null,\n      random: null,\n      Vote: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('/voting-app/candidates/', {\n      method: \"GET\"\n    }).then(res => res.json()).then(candidates => this.setState({\n      candidates\n    }, () => console.log('Candidates fetched..', candidates)));\n    fetch('/voting-app/getPubKey/', {\n      method: \"GET\"\n    }).then(res => res.json()).then(pubKey => this.setState({\n      pubKey\n    }, () => console.log('Public Key fetched..', pubKey)));\n    fetch('/voting-app/getBits/', {\n      method: \"GET\"\n    }).then(res => res.json()).then(bits => this.setState({\n      bits\n    }, () => console.log('Number of bits fetched..', bits)));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(FileReader, {\n      onFileLoaded: this.handleForce,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default VerifyVote;","map":{"version":3,"sources":["/home/tomas/Voting app/voting-app/client/src/components/verifyVote/verifyVote.js"],"names":["React","Component","FileReader","NotificationManager","axios","VerifyVote","constructor","props","handleForce","data","isNaN","state","id","random","console","log","get","params","ID","then","response","catch","error","pubKey","candidates","bits","Vote","componentDidMount","fetch","method","res","json","setState","render"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-direct-mutation-state */\nimport React, {Component} from 'react';\nimport FileReader from '../fileReader/fileReader';\nimport { NotificationManager } from 'react-notifications';\nimport axios from 'axios';\n\nclass VerifyVote extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pubKey: [],\n            candidates: [],\n            bits: null,\n            id: null,\n            random: null,\n            Vote: null,\n        }\n    }\n\n    componentDidMount() {\n        fetch('/voting-app/candidates/',{\n            method: \"GET\"})\n            .then(res => res.json())\n            .then(candidates => this.setState({candidates}, () => console.log('Candidates fetched..',\n            candidates)));\n        fetch('/voting-app/getPubKey/',{\n            method: \"GET\"})\n            .then(res => res.json())\n            .then(pubKey => this.setState({pubKey}, () => console.log('Public Key fetched..',\n            pubKey)));\n        fetch('/voting-app/getBits/',{\n            method: \"GET\"})\n            .then(res => res.json())\n            .then(bits => this.setState({bits}, () => console.log('Number of bits fetched..',\n            bits)));\n    }\n\n    handleForce = data => {\n        if(!isNaN(data[0][0]) && !isNaN(data[1][0])){\n            this.state.id = data[0][0];\n            this.state.random = data[1][0];\n            console.log(data[0][0]);\n            console.log(data[1][0]);\n            axios.get('/voting-app/getVote', {\n                params: {\n                  ID: this.state.id\n                }\n              })\n              .then(response => {\n                console.log(response);\n                    /*this.setState({isFinish: true});\n                    this.state.isFinish = true;\n                    NotificationManager.success('Your vote is counted :-)', 'SUCCESS!');*/\n            })\n              .catch(function (error) {\n                console.log(error);\n              })\n              .then(function () {\n                // always executed\n              }); \n        }\n        else{\n            NotificationManager.error('Your is is not correct :-(', 'ERROR!');\n            return;\n        }\n    };\n\n    render(){\n        return(\n            <div>\n                <FileReader onFileLoaded={this.handleForce}/>\n            </div>\n        );\n    }\n}\nexport default VerifyVote;"]},"metadata":{},"sourceType":"module"}
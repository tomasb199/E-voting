{"ast":null,"code":"var _jsxFileName = \"/home/tomas/Voting app (2)/voting-app/client/src/components/fileReader/fileReader.js\";\nimport React from 'react';\nimport { string, func, element, oneOfType } from 'prop-types';\n\nconst PapaParse = require('papaparse/papaparse.min.js');\n\nconst FileRead = ({\n  accept = '.csv, text/csv',\n  cssClass = 'csv-reader-input',\n  cssInputClass = 'csv-input',\n  label,\n  onFileLoaded,\n  onError,\n  inputId = null,\n  inputStyle = {},\n  parserOptions = {}\n}) => {\n  let fileContent = undefined;\n\n  const handleChangeFile = e => {\n    let reader = new FileReader();\n\n    if (e.target.files.length > 0) {\n      const filename = e.target.files[0].name;\n\n      reader.onload = event => {\n        const csvData = PapaParse.parse(event.target.result, Object.assign(parserOptions, {\n          error: onError\n        }));\n        onFileLoaded(csvData.data, filename);\n      };\n\n      reader.readAsText(e.target.files[0]);\n    }\n  };\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"custom-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    class: \"custom-file-input\",\n    id: \"customFile\",\n    onChange: e => handleChangeFile(e),\n    accept: accept,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    class: \"custom-file-label\",\n    for: \"customFile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Choose file\")));\n};\n\nFileRead.propTypes = {\n  cssClass: string,\n  cssInputClass: string,\n  label: oneOfType([string, element]),\n  onFileLoaded: func.isRequired,\n  onError: func,\n  inputId: string\n};\nexport default FileRead;","map":{"version":3,"sources":["/home/tomas/Voting app (2)/voting-app/client/src/components/fileReader/fileReader.js"],"names":["React","string","func","element","oneOfType","PapaParse","require","FileRead","accept","cssClass","cssInputClass","label","onFileLoaded","onError","inputId","inputStyle","parserOptions","fileContent","undefined","handleChangeFile","e","reader","FileReader","target","files","length","filename","name","onload","event","csvData","parse","result","Object","assign","error","data","readAsText","propTypes","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCC,SAAhC,QAAiD,YAAjD;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAC,4BAAD,CAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AACdC,EAAAA,MAAM,GAAG,gBADK;AAEdC,EAAAA,QAAQ,GAAG,kBAFG;AAGdC,EAAAA,aAAa,GAAG,WAHF;AAIdC,EAAAA,KAJc;AAKdC,EAAAA,YALc;AAMdC,EAAAA,OANc;AAOdC,EAAAA,OAAO,GAAG,IAPI;AAQdC,EAAAA,UAAU,GAAG,EARC;AASdC,EAAAA,aAAa,GAAG;AATF,CAAD,KAUX;AACJ,MAAIC,WAAW,GAAGC,SAAlB;;AAEA,QAAMC,gBAAgB,GAAGC,CAAC,IAAI;AAC5B,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACA,QAAIF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,YAAMC,QAAQ,GAAGN,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBG,IAAnC;;AAEAN,MAAAA,MAAM,CAACO,MAAP,GAAgBC,KAAK,IAAI;AACvB,cAAMC,OAAO,GAAGzB,SAAS,CAAC0B,KAAV,CACdF,KAAK,CAACN,MAAN,CAAaS,MADC,EAEdC,MAAM,CAACC,MAAP,CAAclB,aAAd,EAA6B;AAC3BmB,UAAAA,KAAK,EAAEtB;AADoB,SAA7B,CAFc,CAAhB;AAMAD,QAAAA,YAAY,CAACkB,OAAO,CAACM,IAAT,EAAeV,QAAf,CAAZ;AACD,OARD;;AAUAL,MAAAA,MAAM,CAACgB,UAAP,CAAkBjB,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAAlB;AACD;AACF,GAjBD;;AAkBM,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAC,mBAAzB;AAA6C,IAAA,EAAE,EAAC,YAAhD;AAA6D,IAAA,QAAQ,EAAEJ,CAAC,IAAID,gBAAgB,CAACC,CAAD,CAA5F;AAAiG,IAAA,MAAM,EAAEZ,MAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,KAAK,EAAC,mBAAb;AAAiC,IAAA,GAAG,EAAC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CADJ,CADJ;AAQH,CAvCL;;AAwCID,QAAQ,CAAC+B,SAAT,GAAqB;AACjB7B,EAAAA,QAAQ,EAAER,MADO;AAEjBS,EAAAA,aAAa,EAAET,MAFE;AAGjBU,EAAAA,KAAK,EAAEP,SAAS,CAAC,CAACH,MAAD,EAASE,OAAT,CAAD,CAHC;AAIjBS,EAAAA,YAAY,EAAEV,IAAI,CAACqC,UAJF;AAKjB1B,EAAAA,OAAO,EAAEX,IALQ;AAMjBY,EAAAA,OAAO,EAAEb;AANQ,CAArB;AASJ,eAAeM,QAAf","sourcesContent":["import React from 'react';\nimport { string, func, element, oneOfType } from 'prop-types';\nconst PapaParse = require('papaparse/papaparse.min.js');\n\nconst FileRead = ({\n    accept = '.csv, text/csv',\n    cssClass = 'csv-reader-input',\n    cssInputClass = 'csv-input',\n    label,\n    onFileLoaded,\n    onError,\n    inputId = null,\n    inputStyle = {},\n    parserOptions = {}\n}) => {\n  let fileContent = undefined;\n\n  const handleChangeFile = e => {\n    let reader = new FileReader();\n    if (e.target.files.length > 0) {\n      const filename = e.target.files[0].name;\n\n      reader.onload = event => {\n        const csvData = PapaParse.parse(\n          event.target.result,\n          Object.assign(parserOptions, {\n            error: onError\n          })\n        );\n        onFileLoaded(csvData.data, filename);\n      };\n\n      reader.readAsText(e.target.files[0]);\n    }\n  };\n        return(\n            <form>\n                <div className=\"custom-file\">\n                    <input type=\"file\" class=\"custom-file-input\" id=\"customFile\" onChange={e => handleChangeFile(e)} accept={accept}/>\n                    <label class=\"custom-file-label\" for=\"customFile\">Choose file</label>\n                </div>\n            </form>\n        );\n    };\n    FileRead.propTypes = {\n        cssClass: string,\n        cssInputClass: string,\n        label: oneOfType([string, element]),\n        onFileLoaded: func.isRequired,\n        onError: func,\n        inputId: string\n      };\n\nexport default FileRead;"]},"metadata":{},"sourceType":"module"}
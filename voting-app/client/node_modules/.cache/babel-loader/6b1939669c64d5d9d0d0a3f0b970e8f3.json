{"ast":null,"code":"import _slicedToArray from \"/home/tomas/Voting app (2)/voting-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/tomas/Voting app (2)/voting-app/client/src/components/candidates/candidates.js\";\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable react/no-direct-mutation-state */\n\n/* eslint-disable no-undef */\n\n/* eslint-disable no-unused-expressions */\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ReactTable from 'react-table';\nimport axios from 'axios';\nimport 'react-table/react-table.css';\nimport './candidates.css';\n\nconst _require = require('paillier-in-set-zkp'),\n      encryptWithProof = _require.encryptWithProof,\n      verifyProof = _require.verifyProof;\n\nconst paillier = require('paillier-js');\n\nvar bigInt = require(\"big-integer\");\n\nclass Candidates extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      alert('Your username is: ' + this.input.value);\n    };\n\n    this.handleOnClickVote = event => {\n      var validScores = this.state.candidates.map(function (obj) {\n        return obj.Record.Vote;\n      });\n      console.log(validScores);\n      console.time('encrypt');\n      const publicKey = new paillier.PublicKey(bigInt(this.state.pubKey.n), this.state.pubKey.g);\n\n      const _encryptWithProof = encryptWithProof(publicKey, this.state.vote, validScores, this.state.bits),\n            _encryptWithProof2 = _slicedToArray(_encryptWithProof, 3),\n            cipher = _encryptWithProof2[0],\n            proof = _encryptWithProof2[1],\n            random = _encryptWithProof2[2];\n\n      console.log(cipher);\n      console.log(proof);\n      console.log(random.toString());\n      console.timeEnd('encrypt');\n      var vote = {\n        id: '1',\n        Vote: parseInt(this.state.vote)\n      };\n      console.log(this.state.voteName);\n      axios.post('/voting-app/vote', vote).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n      event.preventDefault();\n      alert('Your radndom value is: ');\n    };\n\n    this.state = {\n      pubKey: [],\n      candidates: [],\n      vote: null,\n      voteName: '',\n      bits: null\n    };\n    this.handleOnClickVote = this.handleOnClickVote.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('/voting-app/candidates/', {\n      method: \"GET\"\n    }).then(res => res.json()).then(candidates => this.setState({\n      candidates\n    }, () => console.log('Candidates fetched..', candidates)));\n    fetch('/voting-app/getPubKey/', {\n      method: \"GET\"\n    }).then(res => res.json()).then(pubKey => this.setState({\n      pubKey\n    }, () => console.log('Public Key fetched..', pubKey)));\n    fetch('/voting-app/getBits/', {\n      method: \"GET\"\n    }).then(res => res.json()).then(bits => this.setState({\n      bits\n    }, () => console.log('Number of bits fetched..', bits)));\n  }\n\n  render() {\n    const columns = [{\n      Header: \"Vote\",\n      style: {\n        textAlign: \"center\"\n      },\n      Cell: props => {\n        return React.createElement(\"div\", {\n          class: \"radio\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          name: \"optradio\",\n          onClick: () => {\n            this.state.vote = props.original.Record.Vote;\n            this.state.voteName = props.original.Record.Name;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        })));\n      },\n      sortable: false,\n      width: 100,\n      maxWidth: 100,\n      minWidth: 100\n    }, {\n      Header: \"ID\",\n      accessor: \"Record.ID\",\n      style: {\n        textAlign: \"center\"\n      },\n      width: 75,\n      maxWidth: 75,\n      minWidth: 75\n    }, {\n      Header: \"Name\",\n      accessor: \"Record.Name\",\n      style: {\n        textAlign: \"center\"\n      }\n    }, {\n      Header: \"Party\",\n      accessor: \"Record.Description\",\n      style: {\n        textAlign: \"center\"\n      },\n      filterable: false\n    }, {\n      Header: \"Age\",\n      accessor: \"Record.Age\",\n      style: {\n        textAlign: \"center\"\n      },\n      filterable: false\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(ReactTable, {\n      className: \"-striped -highlight\",\n      defaultPageSize: 5,\n      minRows: 1,\n      columns: columns,\n      data: this.state.candidates,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"success\",\n      onClick: this.handleOnClickVote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Vote\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.state.random));\n  }\n\n}\n\nexport default Candidates;","map":{"version":3,"sources":["/home/tomas/Voting app (2)/voting-app/client/src/components/candidates/candidates.js"],"names":["React","Component","Button","ReactTable","axios","require","encryptWithProof","verifyProof","paillier","bigInt","Candidates","constructor","handleSubmit","event","preventDefault","alert","input","value","handleOnClickVote","validScores","state","candidates","map","obj","Record","Vote","console","log","time","publicKey","PublicKey","pubKey","n","g","vote","bits","cipher","proof","random","toString","timeEnd","id","parseInt","voteName","post","then","response","catch","error","bind","componentDidMount","fetch","method","res","json","setState","render","columns","Header","style","textAlign","Cell","props","original","Name","sortable","width","maxWidth","minWidth","accessor","filterable"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable react/no-direct-mutation-state */\n/* eslint-disable no-undef */\n/* eslint-disable no-unused-expressions */\nimport React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ReactTable from 'react-table';\nimport axios from 'axios';\nimport 'react-table/react-table.css'\nimport './candidates.css';\n\nconst { encryptWithProof, verifyProof } = require('paillier-in-set-zkp')\nconst paillier = require('paillier-js')\nvar bigInt = require(\"big-integer\");\n\nclass Candidates extends Component{\n\n    constructor() {\n        super();\n        this.state = {\n            pubKey: [],\n            candidates: [],\n            vote: null,\n            voteName: '',\n            bits: null\n        }\n        this.handleOnClickVote = this.handleOnClickVote.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        fetch('/voting-app/candidates/',{\n            method: \"GET\"})\n            .then(res => res.json())\n            .then(candidates => this.setState({candidates}, () => console.log('Candidates fetched..',\n            candidates)));\n        fetch('/voting-app/getPubKey/',{\n            method: \"GET\"})\n            .then(res => res.json())\n            .then(pubKey => this.setState({pubKey}, () => console.log('Public Key fetched..',\n            pubKey)));\n        fetch('/voting-app/getBits/',{\n            method: \"GET\"})\n            .then(res => res.json())\n            .then(bits => this.setState({bits}, () => console.log('Number of bits fetched..',\n            bits)));\n        \n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        alert('Your username is: ' + this.input.value);\n    };\n\n    handleOnClickVote = event => {\n        var validScores = this.state.candidates.map(function (obj) {\n            return obj.Record.Vote;\n        });\n        console.log(validScores);\n        console.time('encrypt');\n\n        const publicKey = new paillier.PublicKey(bigInt(this.state.pubKey.n), this.state.pubKey.g);\n        \n        const [cipher, proof, random] = encryptWithProof(publicKey, this.state.vote, validScores, this.state.bits);\n        console.log(cipher);\n        console.log(proof);\n        console.log(random.toString());\n        console.timeEnd('encrypt');\n        var vote = {\n            id: '1',\n            Vote: parseInt(this.state.vote)\n        }\n        console.log(this.state.voteName);\n        axios.post('/voting-app/vote', vote)\n            .then(response => {\n                console.log(response);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n        event.preventDefault();\n        alert('Your radndom value is: ');\n    }\n\n    render(){\n        const columns = [\n            {\n                Header: \"Vote\",\n                style:{\n                      textAlign: \"center\"  \n                },\n                Cell: props =>{\n                    return(\n                        <div class=\"radio\">\n                            <label><input type=\"radio\" name=\"optradio\"\n                                onClick={() =>{\n                                    this.state.vote = props.original.Record.Vote;\n                                    this.state.voteName = props.original.Record.Name;\n                                }}\n                            /></label>\n                        </div>\n                    )\n                },\n                sortable: false,\n                width: 100,\n                maxWidth:100,\n                minWidth:100\n            },\n            {\n                Header: \"ID\",\n                accessor: \"Record.ID\",\n                style:{\n                      textAlign: \"center\"  \n                },\n                width: 75,\n                maxWidth: 75,\n                minWidth: 75\n            },\n            {\n                Header: \"Name\",\n                accessor: \"Record.Name\",\n                style:{\n                    textAlign: \"center\"  \n                }\n                \n            },\n            {\n                Header: \"Party\",\n                accessor: \"Record.Description\",\n                style:{\n                    textAlign: \"center\"  \n                },\n                filterable: false\n            },\n            {\n                Header: \"Age\",\n                accessor: \"Record.Age\",\n                style:{\n                    textAlign: \"center\"  \n                },\n                filterable: false,\n            }\n        ]\n        \n        return (\n            <div>\n                <ReactTable\n                    className=\"-striped -highlight\"\n                    defaultPageSize={5}\n                    minRows={1}\n                    columns={columns}\n                    data={this.state.candidates}\n                >\n                </ReactTable>\n                \n                <Button variant=\"success\" onClick={this.handleOnClickVote}>Vote</Button>\n                <p>{this.state.random}</p>\n            </div>\n            \n        );\n    }\n}\n\nexport default Candidates;\n"]},"metadata":{},"sourceType":"module"}
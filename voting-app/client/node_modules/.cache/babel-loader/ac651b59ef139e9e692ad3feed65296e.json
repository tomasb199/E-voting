{"ast":null,"code":"var _jsxFileName = \"/home/tomas/Voting app (2)/voting-app/client/src/components/candidates/candidates.js\";\n\n/* eslint-disable no-undef */\n\n/* eslint-disable no-unused-expressions */\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ReactTable from 'react-table';\nimport axios from 'axios';\nimport 'react-table/react-table.css';\nimport './candidates.css';\n\nvar Confirm = require('react-confirm-bootstrap');\n\nclass Candidates extends Component {\n  constructor() {\n    super();\n    this.state = {\n      pubKey: [],\n      candidates: [],\n      vote: null,\n      voteName: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('/voting-app/candidates/', {\n      method: \"GET\"\n    }).then(res => res.json()).then(candidates => this.setState({\n      candidates\n    }, () => console.log('Candidates fetched..', candidates)));\n    fetch('/voting-app/getPubKey', {\n      method: \"GET\"\n    }).then(res => res.json()).then(pubKey => this.setState({\n      pubKey\n    }, () => console.log('Candidates fetched..', pubKey)));\n  }\n\n  onConfirm() {// Preform your action.\n  }\n\n  render() {\n    const columns = [{\n      Header: \"Vote\",\n      style: {\n        textAlign: \"center\"\n      },\n      Cell: props => {\n        return React.createElement(\"div\", {\n          class: \"radio\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          name: \"optradio\",\n          onClick: () => {\n            this.state.vote = props.original.Record.Vote;\n            this.state.voteName = props.original.Record.Name;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        })))\n        /*<Button variant=\"success\"\n            onClick={() =>{\n                //console.log(\"propts\", props.original.Record.Vote);\n                this.state.vote = props.original.Record.Vote;\n                console.log(this.state.vote);\n            }}\n        >Vote</Button>*/\n        ;\n      },\n      sortable: false,\n      width: 100,\n      maxWidth: 100,\n      minWidth: 100\n    }, {\n      Header: \"ID\",\n      accessor: \"Record.ID\",\n      style: {\n        textAlign: \"center\"\n      },\n      width: 100,\n      maxWidth: 100,\n      minWidth: 100\n    }, {\n      Header: \"Name\",\n      accessor: \"Record.Name\",\n      style: {\n        textAlign: \"center\"\n      }\n    }, {\n      Header: \"Party\",\n      accessor: \"Record.Description\",\n      style: {\n        textAlign: \"center\"\n      },\n      filterable: false\n    }, {\n      Header: \"Age\",\n      accessor: \"Record.Age\",\n      style: {\n        textAlign: \"center\"\n      },\n      filterable: false\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(ReactTable, {\n      className: \"-striped -highlight\",\n      defaultPageSize: 5,\n      minRows: 1,\n      columns: columns,\n      data: this.state.candidates,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"success\",\n      onClick: () => {\n        React.createElement(Confirm, {\n          onConfirm: this.onConfirm,\n          body: \"Are you sure you want to delete this?\",\n          confirmText: \"Confirm Delete\",\n          title: \"Deleting Stuff\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \"Delete Stuff\"));\n        console.log(this.state.voteName); //if (window.confirm('Are you sure vote ' + this.state.voteName  + '?')) this.onCancel(console.log(\"cancel\"))\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Vote\"));\n  }\n\n}\n\nexport default Candidates;","map":{"version":3,"sources":["/home/tomas/Voting app (2)/voting-app/client/src/components/candidates/candidates.js"],"names":["React","Component","Button","ReactTable","axios","Confirm","require","Candidates","constructor","state","pubKey","candidates","vote","voteName","componentDidMount","fetch","method","then","res","json","setState","console","log","onConfirm","render","columns","Header","style","textAlign","Cell","props","original","Record","Vote","Name","sortable","width","maxWidth","minWidth","accessor","filterable"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable no-unused-expressions */\nimport React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ReactTable from 'react-table';\nimport axios from 'axios';\nimport 'react-table/react-table.css'\nimport './candidates.css';\n\nvar Confirm = require('react-confirm-bootstrap');\n\nclass Candidates extends Component{\n\n    constructor() {\n        super();\n        this.state = {\n            pubKey: [],\n            candidates: [],\n            vote: null,\n            voteName: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('/voting-app/candidates/',{\n            method: \"GET\"})\n            .then(res => res.json())\n            .then(candidates => this.setState({candidates}, () => console.log('Candidates fetched..',\n            candidates)));\n        fetch('/voting-app/getPubKey',{\n            method: \"GET\"})\n            .then(res => res.json())\n            .then(pubKey => this.setState({pubKey}, () => console.log('Candidates fetched..',\n            pubKey)));\n    }\n    onConfirm() {\n        // Preform your action.\n    }\n\n    render(){\n\n        const columns = [\n            {\n                Header: \"Vote\",\n                style:{\n                      textAlign: \"center\"  \n                },\n                Cell: props =>{\n                    return(\n                        <div class=\"radio\">\n                            <label><input type=\"radio\" name=\"optradio\"\n                                onClick={() =>{\n                                    this.state.vote = props.original.Record.Vote;\n                                    this.state.voteName = props.original.Record.Name;\n                                }}\n                            /></label>\n                        </div>\n                        /*<Button variant=\"success\"\n                            onClick={() =>{\n                                //console.log(\"propts\", props.original.Record.Vote);\n                                this.state.vote = props.original.Record.Vote;\n                                console.log(this.state.vote);\n                            }}\n                        >Vote</Button>*/\n                    )\n                },\n                sortable: false,\n                width: 100,\n                maxWidth:100,\n                minWidth:100\n            },\n            {\n                Header: \"ID\",\n                accessor: \"Record.ID\",\n                style:{\n                      textAlign: \"center\"  \n                },\n                width: 100,\n                maxWidth:100,\n                minWidth:100\n            },\n            {\n                Header: \"Name\",\n                accessor: \"Record.Name\",\n                style:{\n                    textAlign: \"center\"  \n                }\n                \n            },\n            {\n                Header: \"Party\",\n                accessor: \"Record.Description\",\n                style:{\n                    textAlign: \"center\"  \n                },\n                filterable: false\n            },\n            {\n                Header: \"Age\",\n                accessor: \"Record.Age\",\n                style:{\n                    textAlign: \"center\"  \n                },\n                filterable: false\n            }\n        ]\n        \n        return (\n            \n            <div>\n                <ReactTable\n                    className=\"-striped -highlight\"\n                    defaultPageSize={5}\n                    minRows={1}\n                    columns={columns}\n                    data={this.state.candidates}\n                >\n                </ReactTable>\n                \n                <Button variant=\"success\"\n                    onClick={() =>{\n                        <Confirm\n                            onConfirm={this.onConfirm}\n                            body=\"Are you sure you want to delete this?\"\n                            confirmText=\"Confirm Delete\"\n                            title=\"Deleting Stuff\">\n                            <button>Delete Stuff</button>\n                        </Confirm>\n                        console.log(this.state.voteName);\n                        //if (window.confirm('Are you sure vote ' + this.state.voteName  + '?')) this.onCancel(console.log(\"cancel\"))\n                        \n                    }}\n                >Vote\n                </Button>\n            </div>\n            \n        );\n    }\n}\n\nexport default Candidates;\n"]},"metadata":{},"sourceType":"module"}
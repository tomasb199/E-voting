{"ast":null,"code":"var _jsxFileName = \"/home/tomas/Voting app/voting-app/client/src/components/verifyVote/verifyVote.js\";\nimport React, { Component } from 'react';\nimport FileReader from '../fileReader/fileReader';\n\nclass VerifyVote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleForce = data => {\n      console.log(data);\n    };\n\n    this.state = {\n      pubKey: [],\n      candidates: [],\n      bits: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('/voting-app/candidates/', {\n      method: \"GET\"\n    }).then(res => res.json()).then(candidates => this.setState({\n      candidates\n    }, () => console.log('Candidates fetched..', candidates)));\n    fetch('/voting-app/getPubKey/', {\n      method: \"GET\"\n    }).then(res => res.json()).then(pubKey => this.setState({\n      pubKey\n    }, () => console.log('Public Key fetched..', pubKey)));\n    fetch('/voting-app/getBits/', {\n      method: \"GET\"\n    }).then(res => res.json()).then(bits => this.setState({\n      bits\n    }, () => console.log('Number of bits fetched..', bits)));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(FileReader, {\n      onFileLoaded: this.handleForce,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default VerifyVote;","map":{"version":3,"sources":["/home/tomas/Voting app/voting-app/client/src/components/verifyVote/verifyVote.js"],"names":["React","Component","FileReader","VerifyVote","constructor","props","handleForce","data","console","log","state","pubKey","candidates","bits","componentDidMount","fetch","method","then","res","json","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAkC;AAE9BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA2BnBC,WA3BmB,GA2BLC,IAAI,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KA7BkB;;AAEf,SAAKG,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,yBAAD,EAA2B;AAC5BC,MAAAA,MAAM,EAAE;AADoB,KAA3B,CAAL,CAEKC,IAFL,CAEUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFjB,EAGKF,IAHL,CAGUL,UAAU,IAAI,KAAKQ,QAAL,CAAc;AAACR,MAAAA;AAAD,KAAd,EAA4B,MAAMJ,OAAO,CAACC,GAAR,CAAY,sBAAZ,EACtDG,UADsD,CAAlC,CAHxB;AAKAG,IAAAA,KAAK,CAAC,wBAAD,EAA0B;AAC3BC,MAAAA,MAAM,EAAE;AADmB,KAA1B,CAAL,CAEKC,IAFL,CAEUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFjB,EAGKF,IAHL,CAGUN,MAAM,IAAI,KAAKS,QAAL,CAAc;AAACT,MAAAA;AAAD,KAAd,EAAwB,MAAMH,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAC9CE,MAD8C,CAA9B,CAHpB;AAKAI,IAAAA,KAAK,CAAC,sBAAD,EAAwB;AACzBC,MAAAA,MAAM,EAAE;AADiB,KAAxB,CAAL,CAEKC,IAFL,CAEUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFjB,EAGKF,IAHL,CAGUJ,IAAI,IAAI,KAAKO,QAAL,CAAc;AAACP,MAAAA;AAAD,KAAd,EAAsB,MAAML,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAC1CI,IAD0C,CAA5B,CAHlB;AAKH;;AAMDQ,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAE,KAAKf,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAvC6B;;AAyClC,eAAeH,UAAf","sourcesContent":["import React, {Component} from 'react';\nimport FileReader from '../fileReader/fileReader';\n\nclass VerifyVote extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pubKey: [],\n            candidates: [],\n            bits: null,\n        }\n    }\n\n    componentDidMount() {\n        fetch('/voting-app/candidates/',{\n            method: \"GET\"})\n            .then(res => res.json())\n            .then(candidates => this.setState({candidates}, () => console.log('Candidates fetched..',\n            candidates)));\n        fetch('/voting-app/getPubKey/',{\n            method: \"GET\"})\n            .then(res => res.json())\n            .then(pubKey => this.setState({pubKey}, () => console.log('Public Key fetched..',\n            pubKey)));\n        fetch('/voting-app/getBits/',{\n            method: \"GET\"})\n            .then(res => res.json())\n            .then(bits => this.setState({bits}, () => console.log('Number of bits fetched..',\n            bits)));\n    }\n\n    handleForce = data => {\n        console.log(data);\n    };\n\n    render(){\n        return(\n            <div>\n                <FileReader onFileLoaded={this.handleForce}/>\n            </div>\n        );\n    }\n}\nexport default VerifyVote;"]},"metadata":{},"sourceType":"module"}
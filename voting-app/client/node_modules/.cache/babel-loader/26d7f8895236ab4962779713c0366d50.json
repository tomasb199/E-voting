{"ast":null,"code":"var _jsxFileName = \"/home/tomas/Voting app/voting-app/client/src/components/verifyVote/verifyVote.js\";\n\n/* eslint-disable react/no-direct-mutation-state */\nimport React, { Component } from 'react';\nimport FileReader from '../fileReader/fileReader';\nimport { NotificationManager } from 'react-notifications';\n\nclass VerifyVote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleForce = data => {\n      if (!isNaN(data[0][0]) && !isNaN(data[1][0])) {\n        this.state.id = data[0][0];\n        this.state.random = data[1][0];\n        console.log(data[0][0]);\n        console.log(data[1][0]);\n        fetch('/voting-app/getVote/:id=', {\n          params: {\n            ID: 12345\n          }\n        }).then(res => res.json()).then(candidates => this.setState({\n          candidates\n        }, () => console.log('Candidates fetched..', candidates)));\n      } else {\n        NotificationManager.error('Your is is not correct :-(', 'ERROR!');\n        return;\n      }\n    };\n\n    this.state = {\n      pubKey: [],\n      candidates: [],\n      bits: null,\n      id: null,\n      random: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('/voting-app/candidates/', {\n      method: \"GET\"\n    }).then(res => res.json()).then(candidates => this.setState({\n      candidates\n    }, () => console.log('Candidates fetched..', candidates)));\n    fetch('/voting-app/getPubKey/', {\n      method: \"GET\"\n    }).then(res => res.json()).then(pubKey => this.setState({\n      pubKey\n    }, () => console.log('Public Key fetched..', pubKey)));\n    fetch('/voting-app/getBits/', {\n      method: \"GET\"\n    }).then(res => res.json()).then(bits => this.setState({\n      bits\n    }, () => console.log('Number of bits fetched..', bits)));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(FileReader, {\n      onFileLoaded: this.handleForce,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default VerifyVote;","map":{"version":3,"sources":["/home/tomas/Voting app/voting-app/client/src/components/verifyVote/verifyVote.js"],"names":["React","Component","FileReader","NotificationManager","VerifyVote","constructor","props","handleForce","data","isNaN","state","id","random","console","log","fetch","params","ID","then","res","json","candidates","setState","error","pubKey","bits","componentDidMount","method","render"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-direct-mutation-state */\nimport React, {Component} from 'react';\nimport FileReader from '../fileReader/fileReader';\nimport { NotificationManager } from 'react-notifications';\n\nclass VerifyVote extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            pubKey: [],\n            candidates: [],\n            bits: null,\n            id: null,\n            random: null,\n        }\n    }\n\n    componentDidMount() {\n        fetch('/voting-app/candidates/',{\n            method: \"GET\"})\n            .then(res => res.json())\n            .then(candidates => this.setState({candidates}, () => console.log('Candidates fetched..',\n            candidates)));\n        fetch('/voting-app/getPubKey/',{\n            method: \"GET\"})\n            .then(res => res.json())\n            .then(pubKey => this.setState({pubKey}, () => console.log('Public Key fetched..',\n            pubKey)));\n        fetch('/voting-app/getBits/',{\n            method: \"GET\"})\n            .then(res => res.json())\n            .then(bits => this.setState({bits}, () => console.log('Number of bits fetched..',\n            bits)));\n    }\n\n    handleForce = data => {\n        if(!isNaN(data[0][0]) && !isNaN(data[1][0])){\n            this.state.id = data[0][0];\n            this.state.random = data[1][0];\n            console.log(data[0][0]);\n            console.log(data[1][0]);\n            fetch('/voting-app/getVote/:id=',{\n                params: {\n                    ID: 12345\n                  }})\n            .then(res => res.json())\n            .then(candidates => this.setState({candidates}, () => console.log('Candidates fetched..',\n            candidates)));\n        }\n        else{\n            NotificationManager.error('Your is is not correct :-(', 'ERROR!');\n            return;\n        }\n    };\n\n    render(){\n        return(\n            <div>\n                <FileReader onFileLoaded={this.handleForce}/>\n            </div>\n        );\n    }\n}\nexport default VerifyVote;"]},"metadata":{},"sourceType":"module"}